version: '1'

volumes:
  mysql_data:

services:
  db:
    image: mysql
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      DB_HOST: db
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/app/mysql_data

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    environment:
      USER_HOST: user
      USER_PORT: ${USER_PORT}
      SELLER_HOST: seller
      SELLER_PORT: ${SELLER_PORT}
      PRODUCT_HOST: product
      PRODUCT_PORT: ${PRODUCT_PORT}
      ORDER_HOST: order
      ORDER_PORT: ${ORDER_PORT}
      PAYMENT_HOST: payment
      PAYMENT_PORT: ${PAYMENT_PORT}
      SHIPMENT_HOST: shipment
      SHIPMENT_PORT: ${SHIPMENT_PORT}
    ports:
      - ${API_GATEWAY_PORT}:${API_GATEWAY_PORT}

  user:
    depends_on:
      - db
      - kafka
    build:
      context: ./user
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}"
      SHIPMENT_PORT: ${SHIPMENT_PORT}
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}

    ports:
      - ${USER_PORT}:${USER_PORT}

  seller:
    depends_on:
      - db
      - kafka
    build:
      context: ./seller
      dockerfile: Dockerfile

    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}"
      SELLER_PORT: ${SELLER_PORT}
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}

    ports:
      - ${SELLER_PORT}:${SELLER_PORT}

  product:
    depends_on:
      - db
      - kafka
    build:
      context: ./product
      dockerfile: Dockerfile

    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}"
      PRODUCT_PORT: ${PRODUCT_PORT}
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
    ports:
      - ${PRODUCT_PORT}:${PRODUCT_PORT}

  order:
    depends_on:
      - db
      - kafka
    build:
      context: ./order
      dockerfile: Dockerfile

    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}"
      ORDER_PORT: ${ORDER_PORT}
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      PAYMENT_HOST: payment
      PAYMENT_PORT: ${PAYMENT_PORT}
      PRODUCT_HOST: product
      PRODUCT_PORT: ${PRODUCT_PORT}
    ports:
      - ${ORDER_PORT}:${ORDER_PORT}

  payment:
    depends_on:
      - db
      - kafka
    build:
      context: ./payment
      dockerfile: Dockerfile

    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}"
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      PAYMENT_PORT: ${PAYMENT_PORT}
    ports:
      - ${PAYMENT_PORT}:${PAYMENT_PORT}

  shipment:
    depends_on:
      - db
      - kafka
    build:
      context: ./shipment
      dockerfile: Dockerfile

    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}"
      SHIPMENT_PORT: ${SHIPMENT_PORT}
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
    ports:
      - ${SHIPMENT_PORT}:${SHIPMENT_PORT}

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper

    environment:
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

