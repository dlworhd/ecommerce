plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.hexagonal'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.0.4'
    implementation 'org.apache.kafka:kafka-clients:3.4.0'
    implementation 'org.springframework.kafka:spring-kafka:3.0.4'
    implementation 'mysql:mysql-connector-java:8.0.32'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation 'com.querydsl:querydsl-core:5.0.0'
    implementation 'com.google.code.gson:gson'
    implementation 'org.json:json:20230227'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}


querydsl {
    jpa = true
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

compileJava.options.encoding = "UTF-8"
sourceCompatibility = 17
targetCompatibility = 17

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    library = "com.querydsl:querydsl-apt:5.0.0:jakarta"
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}